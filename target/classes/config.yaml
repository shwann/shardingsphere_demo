mode:
  type: Standalone
  repository:
    type: JDBC
    props:

dataSources:
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: root
    password: 12345678
    maxPoolSize: 10

rules:
- !SHARDING
    tables:
      t_order:
        actualDataNodes: ds_0.t_order_$->{0..3}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: t_order_inline
        keyGenerateStrategy:
          column: order_id
          keyGeneratorName: snowflake_generator
      t_order_item:
        actualDataNodes: ds_0.t_order_item_$->{0..3}
        tableStrategy:
          standard:
            shardingColumn: user_id
            shardingAlgorithmName: t_user_item_inline
        keyGenerateStrategy:
          column: order_item_id
          keyGeneratorName: snowflake_generator
    bindingTables:
      - t_order,t_order_item

    shardingAlgorithms:
#      t_order_multi_column:
#        type: COMPOSITE_SHARDING_ORDER
#        props:
#          sharding-columns: user_id,order_id
#          shard-count: 4
#          table-prefix: t_order
      t_order_inline:
        type: INLINE
        props:
          algorithm-expression: t_order_$->{user_id % 4}
      t_user_item_inline:
        type: INLINE
        props:
          algorithm-expression: t_order_item_$->{user_id % 4}
    keyGenerators:
      snowflake_generator:
        type: SNOWFLAKE
    
- !BROADCAST
    tables:
      - t_address


props:
  sql-show: true
